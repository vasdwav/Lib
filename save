function SaveManager:BuildConfigSection(tab)
    assert(self.Library, 'Must set SaveManager.Library')

    local section = tab:AddRightGroupbox('Configuration')

    section:AddInput('SaveManager_ConfigName',    { Text = 'Config name' })
    section:AddDropdown('SaveManager_ConfigList', { Text = 'Config list', Values = self:RefreshConfigList(), AllowNull = true })

    section:AddDivider()

    section:AddButton('Create config', function()
        local name = Options.SaveManager_ConfigName.Value

        if name:gsub(' ', '') == '' then 
            return self.Library:Notify('Invalid config name (empty)', 2)
        end

        local success, err = self:Save(name)
        if not success then
            return self.Library:Notify('Failed to save config: ' .. err)
        end

        self.Library:Notify(string.format('Created config %q', name))

        Options.SaveManager_ConfigList:SetValues(self:RefreshConfigList())
        Options.SaveManager_ConfigList:SetValue(nil)
    end):AddButton('Load config', function()
        local name = Options.SaveManager_ConfigList.Value

        local success, err = self:Load(name)
        if not success then
            return self.Library:Notify('Failed to load config: ' .. err)
        end

        self.Library:Notify(string.format('Loaded config %q', name))
    end)

    section:AddButton('Overwrite config', function()
        local name = Options.SaveManager_ConfigList.Value

        local success, err = self:Save(name)
        if not success then
            return self.Library:Notify('Failed to overwrite config: ' .. err)
        end

        self.Library:Notify(string.format('Overwrote config %q', name))
    end)

    section:AddButton('Refresh list', function()
        Options.SaveManager_ConfigList:SetValues(self:RefreshConfigList())
        Options.SaveManager_ConfigList:SetValue(nil)
    end)

    section:AddButton('Set as autoload', function()
        local name = Options.SaveManager_ConfigList.Value
        writefile(self.Folder .. '/settings/autoload.txt', name)
        SaveManager.AutoloadLabel:SetText('Current autoload config: ' .. name)
        self.Library:Notify(string.format('Set %q to auto load', name))
    end)

    SaveManager.AutoloadLabel = section:AddLabel('Current autoload config: none', true)

    if isfile(self.Folder .. '/settings/autoload.txt') then
        local name = readfile(self.Folder .. '/settings/autoload.txt')
        SaveManager.AutoloadLabel:SetText('Current autoload config: ' .. name)
    end

    -- Add the image and label for Discord
    local DiscordGroup = section:AddDependencyBox()
    local Image = DiscordGroup:AddImage('rbxassetid://11902680303', UDim2.new(0, 100, 0, 100)) -- Replace with your desired image asset ID and size

    -- Add a click event to the image
    Image.MouseButton1Click:Connect(function()
        setclipboard('https://discord.gg/xkYzren9AF') -- Replace with your Discord invite link
        self.Library:Notify('Discord link copied to clipboard!', 2)
    end)

    -- Add a label below the image
    DiscordGroup:AddLabel('Join our Discord for updates', true)

    SaveManager:SetIgnoreIndexes({ 'SaveManager_ConfigList', 'SaveManager_ConfigName' })
end
